---
- name: Check if the GO File Already Exists
  stat: path={{ pgsql.base_path }}/go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz
  register: check_go_file


- name: Check if the GO Binary Already Exists
  stat: path=/usr/local/go/bin/go
  register: check_go_bin


- name: Copy the GO File
  copy: src=go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz dest={{ pgsql.base_path }}/go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz mode=0644 owner=root group=root
  register: copy_go_file
  when: check_go_file.stat.exists != True


- name: Download GO File if Copy Fails
  shell: wget https://dl.google.com/go/go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz -P {{ pgsql.base_path }}
  args:
    executable: /bin/bash
  when: copy_go_file is not succeeded


- name: Untar GO File
  become: true
  shell: tar -C /usr/local -xf {{ pgsql.base_path }}/go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz
  args:
    executable: /bin/bash
  when: check_go_bin.stat.exists != True

