---
- name: Create SSL Directory on {{ pgsql.base_dir }} directory for Primary Worker Node
  become_user: postgres
  file:
    path: "{{ _ssl.ssl_dir }}"
    state: directory
    mode: 0755
    owner: postgres
    group: postgres
  register: create_ssl_dir
  when: inventory_hostname in groups['control']


- name: Generate a CA Certificate Private Key on {{ pgsql.base_dir }}/certs Directory for Primary Worker Node
  become_user: postgres
  shell: openssl genrsa -out {{ _ssl.ssl_dir }}/ca.key 4096
  register: gen_ca_cert_priv_key
  when: inventory_hostname in groups['control']


- name: Generate the CA Certificate on {{ pgsql.base_dir }}/certs Directory for Primary Worker Node
  become_user: postgres
  shell: |
    openssl req -x509 -new -nodes -sha512 -days 3650 \
    -subj "/C={{ _ssl.ssl_country }}/ST={{ _ssl.ssl_state }}/L={{ _ssl.ssl_location }}/O={{ _ssl.ssl_organization }}/OU={{ _ssl.ssl_organization_unit }}/CN={{ _ssl.ssl_common_name }}/emailAddress={{ _ssl.ssl_email }}" \
    -key {{ _ssl.ssl_dir }}/ca.key \
    -out {{ _ssl.ssl_dir }}/ca.crt
  register: gen_ca_cert
  when: inventory_hostname in groups['control']


- name: Generate a Private Key on {{ pgsql.base_dir }}/certs Directory for Primary Worker Node
  become_user: postgres
  shell: openssl genrsa -out {{ _ssl.ssl_dir }}/server.key 4096
  register: gen_priv_key
  when: inventory_hostname in groups['control']


- name: Generate a Certificate Signing Request (CSR) on {{ pgsql.base_dir }}/certs Directory for Primary Worker Node
  become_user: postgres
  shell: |
    openssl req -sha512 -new \
    -subj "/C={{ _ssl.ssl_country }}/ST={{ _ssl.ssl_state }}/L={{ _ssl.ssl_location }}/O={{ _ssl.ssl_organization }}/OU={{ _ssl.ssl_organization_unit }}/CN={{ _ssl.ssl_common_name }}/emailAddress={{ _ssl.ssl_email }}" \
    -key {{ _ssl.ssl_dir }}/server.key \
    -out {{ _ssl.ssl_dir }}/server.csr
  register: gen_cert_sign_req
  when: inventory_hostname in groups['control']


- name: Copy an x509 v3 Extension File on {{ pgsql.base_dir }}/certs Directory for Promary Worker Node
  template: src=v3.ext.j2 dest={{ _ssl.ssl_dir }}/v3.ext owner=postgres group=postgres mode=644 force=yes
  register: copy_x509_v3_ext
  when: inventory_hostname in groups['control']


- name: Replace the CRS and CRT File Names on {{ pgsql.base_dir }}/certs Directory for Primary worker node
  become_user: postgres
  shell: |
    openssl x509 -req -sha512 -days 3650 -extfile {{ _ssl.ssl_dir }}/v3.ext \
    -CA {{ _ssl.ssl_dir }}/ca.crt -CAkey {{ _ssl.ssl_dir }}/ca.key -CAcreateserial \
    -in {{ _ssl.ssl_dir }}/server.csr \
    -out {{ _ssl.ssl_dir }}/server.crt
  register: replace_csr_crt
  when: inventory_hostname in groups['control']


#- name: Synchronize SSL Directory Using Rsync Protocol on Delegate Host (push) for {{ pgsql.base_dir }}/certs Directory in Primary Worker Node
#  synchronize:
#    src: "{{ _ssl.ssl_dir }}"
#    dest: "{{ pgsql.base_dir }}"
#    mode: push
#    recursive: yes
#  delegate_to: "{{groups['control'][0]}}"
#  register: ssl_dir_synced
#  when: inventory_hostname not in groups['control']


- name: Synchronize SSL Directory Using Rsync Protocol on Delegate Host (push) for {{ pgsql.base_dir }}/certs Directory in Primary Worker Node
  become_user: root
  shell: |
    rsync -a --rsh='/usr/bin/sshpass -p changeme ssh -o StrictHostKeyChecking=no' {{ _ssl.ssl_dir }} {{ inventory_hostname }}:{{ pgsql.base_dir }}
  delegate_to: "{{groups['control'][0]}}"
  when: inventory_hostname not in groups['control']


- name: Change Permissions for Cert Files in {{ pgsql.base_dir }}/certs Directory for All Worker Nodes
  file:
    path: "{{ _ssl.ssl_dir }}/{{ item }}"
    state: file
    owner: postgres
    group: postgres
    mode: "0600"
  register: change_certs_permission
  with_items:
    - "ca.crt"
    - "ca.key"
    - "ca.srl"
    - "server.crt"
    - "server.csr"
    - "server.key"
    - "v3.ext"

