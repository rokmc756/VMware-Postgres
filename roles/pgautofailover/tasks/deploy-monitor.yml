---
- name: Verify that pg_autocatl of VMware Postgres PGAutoFailover has been Properly Installed
  become_user: postgres
  shell: |
    source {{ pgsql.base_dir }}/.bash_profile
    {{ common.pgsql_bin_dir }}/pg_autoctl version
  register: verify_pg_autoctl_installed
  args:
    chdir: "{{ pgsql.base_dir }}"
    executable: /bin/bash


- name: Verify that pg_ctl of VMware Postgres PGAutoFailover has been Properly Installed
  become_user: postgres
  shell: |
    source {{ pgsql.base_dir }}/.bash_profile
    {{ common.pgsql_bin_dir }}/pg_ctl -V
  register: verify_pg_ctl_installed
  args:
    chdir: "{{ pgsql.base_dir }}"
    executable: /bin/bash


- name: Insert Executable Binary Path into .bashrc for VMware Postgres {{ pgsql.major_version }}
  become_user: postgres
  lineinfile:
    path: "{{ item }}"
    line: "export PATH={{ common.pgsql_bin_dir }}:$PATH"
  with_items:
    - "{{ pgsql.base_dir }}/.bash_profile"
    - "{{ pgsql.home_dir }}/.bashrc"


- name: Create Monitor Mode
  become: true
  become_user: postgres
  shell: |
    source {{ pgsql.base_dir }}/.bash_profile
    {{ common.pgsql_bin_dir }}/pg_autoctl create monitor --auth trust --ssl-self-signed --pgdata {{ pgsql.base_dir }}/{{ _pgfailover.monitor_database }}
  async: 300
  poll: 5
  register: create_monitor_node
  args:
    chdir: "{{ pgsql.base_dir }}"
    executable: /bin/bash


- name: Grant User Access from Network {{ pgsql_network_range }} Access for Access with Cert Authentication
  become_user: postgres
  postgresql_pg_hba:
    dest: "{{ pgsql.base_dir }}/{{ _pgfailover.monitor_database }}/pg_hba.conf"
    contype: host
    users: all
    source: "{{ pgsql_network_range }}"
    databases: all
    method: trust


- name: Create Systemd Service File of Monitor Instance
  become_user: postgres
  shell: |
    source /var/lib/pgsql/.bash_profile
    {{ common.pgsql_bin_dir }}/pg_autoctl -q show systemd --pgdata {{ pgsql.base_dir }}/{{ _pgfailover.monitor_database }} > {{ pgsql.base_dir }}/pgautofailover.service
  register: create_systemd_service
  async: 180
  poll: 5
  args:
    chdir: "{{ pgsql.base_dir }}"
    executable: /bin/bash


- name: Copy Systemd Service File of Monitor Instance
  copy:
    src: "{{ pgsql.base_dir }}/pgautofailover.service"
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: 0644
    remote_src: true


- name: Reload and Start Systemd Service of Monitor Instance
  systemd:
    daemon_reload: yes
    enabled: yes
    state: started
    name: pgautofailover
  register: status_monitor_systemd


- name: Replace Database Directory
  become_user: postgres
  replace:
    path: "{{ pgsql.base_dir }}/.bash_profile"
    regexp: '^(.*)PGDATA=(.*)$'
    replace: 'PGDATA=/{{ pgsql.base_dir }}/{{ _pgfailover.workers_database }}'
    backup: yes


- name: Verify the Current State of Monitor Instance
  become_user: postgres
  shell: |
    ps -ef | grep postgres
  register: verify_monitor_instance_state


- name: Verify the Current State of Monitor
  become_user: postgres
  shell: |
    source {{ pgsql.base_dir }}/.bash_profile
    {{ common.pgsql_bin_dir }}/psql -c "\l"
  register: verify_monitor_state
  args:
    chdir: "{{ pgsql.base_dir }}"
    executable: /bin/bash
- debug: msg={{ verify_monitor_state }}
  tags: print_debug

